version: '3'



################################
########## nodeの設定 ##########
################################
services:
  collaborative_classes-node:
    build: 
      #ビルドする際に使用するdockerfileを指定
      context: node/.devcontainer
      dockerfile: dockerfile
      #dockerfile内で使用する変数を渡す。
      args:
        - http_tmp=$http_proxy
        - https_tmp=$https_proxy
    #ディレクトリをコンテナ内にマウント
    volumes:
      - ./node/src:/src
    #ワーキングディレクトリを指定
    working_dir: /src
    #コンテナ起動時に実行するプログラムを記述
    command: /sbin/init
    #proxyファイルを読み込む
    env_file:
      - proxy.env
    #ttyとprivilegedを有効化
    privileged: true
    tty: true
    #ポート設定
    ports:
      - "3010:3000"
    #コンテナネットワークの設定
    networks:
      - my_network


################################
######### shap-eの設定 #########
################################
  collaborative_classes-shap-e:
    build: 
      #ビルドする際に使用するdockerfileを指定
      context: shap-e/.devcontainer
      dockerfile: dockerfile
      #dockerfile内で使用する変数を渡す。
      args:
        - http_tmp=$http_proxy
        - https_tmp=$https_proxy
    #ディレクトリをコンテナ内にマウント
    volumes:
      - ./shap-e/src:/src
    #ワーキングディレクトリを指定
    working_dir: /src
    #コンテナ起動時に実行するプログラムを記述
    command: /sbin/init
    #proxyファイルを読み込む
    env_file:
      - proxy.env
    #ttyとprivilegedを有効化
    privileged: true
    tty: true
    #ポート設定
    ports:
      - "8000:8000"
    #コンテナネットワークの設定
    networks:
      - my_network
    #GPUを使用するための設定
    deploy:
      resources:
        #コンテナが使用するRAMの上限を設定する際は以下2行をコメントアウト
        #limits:
        #  memory: 24G
        reservations:
          devices:
            - capabilities: [gpu]

    #core dumpを防ぐ為の設定
    shm_size: 12GB



################################
######## nllb-200の設定 ########
################################
  collaborative_classes-nllb-200:
    build: 
      #ビルドする際に使用するdockerfileを指定
      context: nllb-200/.devcontainer
      dockerfile: dockerfile
      #dockerfile内で使用する変数を渡す。
      args:
        - http_tmp=$http_proxy
        - https_tmp=$https_proxy
    #ディレクトリをコンテナ内にマウント
    volumes:
      - ./nllb-200/src:/src
      - /srv/models/:/src/models
    #ワーキングディレクトリを指定
    working_dir: /src
    #コンテナ起動時に実行するプログラムを記述
    command: python3 nllb-200_service.py
    #proxyファイルを読み込む
    env_file:
      - proxy.env
    #ttyとprivilegedを有効化
    privileged: true
    tty: true
    #ポート設定
    ports:
      - "8020:8020"
    #コンテナネットワークの設定
    networks:
      - my_network
    #GPUを使用するための設定
    deploy:
      resources:
        #コンテナが使用するRAMの上限を設定する際は以下2行をコメントアウト
        #limits:
        #  memory: 24G
        reservations:
          devices:
            - capabilities: [gpu]

    #core dumpを防ぐ為の設定
    shm_size: 12GB



################################
########## chiveの設定 #########
###############################
  collaborative_classes-chive:
    build: 
      #ビルドする際に使用するdockerfileを指定
      context: chive/.devcontainer
      dockerfile: dockerfile
      #dockerfile内で使用する変数を渡す。
      args:
        - http_tmp=$http_proxy
        - https_tmp=$https_proxy
    #設定ファイルをコンテナ内にマウント。
    volumes:
      - ./chive/src/:/src
    #コンテナ起動時に実行するプログラムを記述
    #command: /sbin/init
    #ポート設定
    ports:
      - "3020:3020"       #node用
      - "8030:8030"   #shap-e用
      - "8040:8040"   #nllb-200用
      - "8050:8050"    #chive用
    #コンテナネットワークの設定
    networks:
      - my_network



################################
########## nginxの設定 ##########
################################
  collaborative_classes-nginx:
    build: 
      #ビルドする際に使用するdockerfileを指定
      context: nginx/.devcontainer
      dockerfile: dockerfile
      #dockerfile内で使用する変数を渡す。
      args:
        - http_tmp=$http_proxy
        - https_tmp=$https_proxy
    #設定ファイルをコンテナ内にマウント。
    volumes:
      - ./nginx/src/nginx.conf:/etc/nginx/nginx.conf
    #コンテナ起動時に実行するプログラムを記述
    #command: /sbin/init
    #ポート設定
    ports:
      - "3020:3020"       #node用
      - "8020:8020"   #shap-e用
      - "8030:8030"   #nllb-200用
    #コンテナネットワークの設定
    networks:
      - my_network


# コンテナネットワークの定義
networks:
  my_network:  
    driver: bridge